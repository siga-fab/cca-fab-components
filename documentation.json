{
  "pipes": [],
  "interfaces": [],
  "injectables": [],
  "classes": [],
  "directives": [],
  "components": [
    {
      "name": "ButtonComponent",
      "id": "component-ButtonComponent-bb6e84a0ab74d015cc39e86ec727a61f",
      "file": "projects/common/src/lib/button/button.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "cca-common-button",
      "styleUrls": ["./button.component.scss"],
      "styles": [],
      "templateUrl": ["./button.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "type",
          "line": 9,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "buttonClick",
          "defaultValue": "new EventEmitter()",
          "line": 10,
          "type": "EventEmitter<void>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 14
        },
        {
          "name": "onClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'cca-common-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent implements OnInit {\n  @Input() type: string;\n  @Output() buttonClick: EventEmitter<void> = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {\n\n  }\n\n  onClick() {\n    this.buttonClick.emit();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@import '../../assets/scss/colors.scss';\n\nbutton {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  height: 3.6rem;\n  padding: 0 1.3rem;\n\n  color: $primary;\n\n  appearance: none;\n  border-radius: 2rem;\n  cursor: pointer;\n  outline: none;\n\n  &,\n  span,\n  p {\n    font-size: 1.6rem;\n    line-height: 1.9rem;\n    text-transform: uppercase;\n  }\n\n  .button-icon {\n    margin-right: 2.6rem;\n  }\n\n  &.primary {\n    background-color: transparent;\n    border: 2px solid $primary;\n  }\n}\n",
          "styleUrl": "./button.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 10
      },
      "implements": ["OnInit"],
      "templateData": "<button (click)=\"onClick()\" [ngClass]=\"{ primary: !type, '[type]': type }\">\n  <div class=\"button-icon\">\n    <ng-content select=\"[slot='icon']\"></ng-content>\n  </div>\n  <span><ng-content select=\"[slot='text']\"></ng-content></span>\n</button>\n"
    },
    {
      "name": "CardComponent",
      "id": "component-CardComponent-90dbd1daaca91b69a40428f3ec41d9c4",
      "file": "projects/common/src/lib/card/card.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "cca-common-card",
      "styleUrls": ["./card.component.scss"],
      "styles": [],
      "templateUrl": ["./card.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 11
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cca-common-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./card.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 8
      },
      "implements": ["OnInit"],
      "templateData": "<p>card works!</p>\n"
    },
    {
      "name": "IconComponent",
      "id": "component-IconComponent-5db80df6850b5faa47466094622cab74",
      "file": "projects/common/src/lib/icon/icon.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "cca-common-icon",
      "styleUrls": ["./icon.component.scss"],
      "styles": [],
      "templateUrl": ["./icon.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 11
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cca-common-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n})\nexport class IconComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "$material-icons-font-path: '../../assets/fonts/';\n@import '~material-icons/iconfont/material-icons.scss';\n\n.material-icons {\n  display: flex;\n  user-select: none;\n}\n",
          "styleUrl": "./icon.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 8
      },
      "implements": ["OnInit"],
      "templateData": "<span class=\"material-icons\"><ng-content></ng-content></span>\n"
    },
    {
      "name": "InputComponent",
      "id": "component-InputComponent-1230ed361e96551d8abb993c6695216d",
      "file": "projects/common/src/lib/input/input.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "cca-common-input",
      "styleUrls": ["./input.component.scss"],
      "styles": [],
      "templateUrl": ["./input.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "disabled",
          "defaultValue": "false",
          "line": 35,
          "type": "boolean"
        },
        {
          "name": "type",
          "defaultValue": "'text'",
          "line": 34,
          "type": "string"
        },
        {
          "name": "value",
          "defaultValue": "''",
          "line": 33,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "focus",
          "defaultValue": "false",
          "line": 37,
          "type": "boolean"
        }
      ],
      "propertiesClass": [
        {
          "name": "numberInterval",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 39,
          "modifierKind": [112]
        },
        {
          "name": "slim",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 43,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Attribute",
              "stringifiedArguments": "'slim'"
            }
          ],
          "modifierKind": [114]
        },
        {
          "name": "textCenter",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 42,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Attribute",
              "stringifiedArguments": "'textCenter'"
            }
          ],
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "add",
          "args": [
            {
              "name": "event",
              "type": "Event"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 60,
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isFocused",
          "args": [
            {
              "name": "value",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51,
          "jsdoctags": [
            {
              "name": "value",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 49
        },
        {
          "name": "onMouseUp",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 55
        },
        {
          "name": "sub",
          "args": [
            {
              "name": "event",
              "type": "Event"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 67,
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { trigger, transition, animate, style } from '@angular/animations';\nimport { Attribute, Component, Input, OnInit, Optional, Output } from '@angular/core';\n\n@Component({\n  selector: 'cca-common-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n\n      transition(':enter', [\n        style({\n          opacity: 0\n        }),\n        animate('.1s ease-in-out', style({\n          opacity: 1\n        }))\n      ]),\n\n      transition(':leave', [\n        style({\n          opacity: 1\n        }),\n        animate('.1s ease-in-out', style({\n          opacity: 0\n        }))\n      ])\n    ])\n  ]\n})\nexport class InputComponent implements OnInit {\n\n  @Input() value: string = '';\n  @Input() type: string = 'text';\n  @Input() disabled: boolean = false;\n\n  @Output() focus: boolean = false;\n\n  private numberInterval: any;\n\n  constructor(\n    @Optional() @Attribute('textCenter') public textCenter: any,\n    @Optional() @Attribute('slim') public slim: any\n  ) {\n    this.textCenter = textCenter !== null\n    this.slim = slim !== null\n  }\n\n  ngOnInit(): void {}\n\n  isFocused(value: boolean) {\n    this.focus = value\n  }\n\n  onMouseUp(){\n    clearInterval(this.numberInterval);\n    this.numberInterval = null;\n  }\n\n  add(event: Event){\n    event.preventDefault();\n    this.numberInterval = setInterval( () => {\n      this.value = String(parseInt(this.value) + 1)\n    }, 100)\n  }\n\n  sub(event: Event){\n    event.preventDefault();\n    this.numberInterval = setInterval( () => {\n      this.value = String(parseInt(this.value) - 1)\n    }, 100)\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@import '../../assets/scss/colors.scss';\n\n:host {\n  position: relative;\n  display: inline-block;\n\n  input[type] {\n    color: $grey;\n    font-family: Cabin;\n    font-size: 1.4rem;\n\n    width: 100%;\n    min-width: 4rem;\n\n    border-radius: 0.5rem;\n    border: 1px solid $light-grey;\n    padding: 1rem;\n\n    &.center {\n      text-align: center;\n    }\n\n    &.slim {\n      padding-top: 0;\n      padding-bottom: 0;\n    }\n\n    transition: box-shadow 0.1s ease-in-out;\n\n    &:focus {\n      box-shadow: $focus-shadow;\n      outline: 0;\n    }\n\n    &[type=number]::-webkit-outer-spin-button,\n    &[type=number]::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n\n    &[type=number] {\n      -moz-appearance: textfield;\n    }\n  }\n\n  .number-minus, .number-plus {\n    position: absolute;\n    left: calc(50% - 12px);\n    cursor: pointer;\n  }\n\n  .number-minus {\n    top: 4rem;\n\n    &.slim {\n      top: 2rem;\n    }\n  }\n\n  .number-plus {\n    top: -2.5rem;\n  }\n}\n",
          "styleUrl": "./input.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "textCenter",
            "type": "any"
          },
          {
            "name": "slim",
            "type": "any"
          }
        ],
        "line": 39,
        "jsdoctags": [
          {
            "name": "textCenter",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "slim",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div [@fadeInOut] (mousedown)=\"add($event)\" (mouseup)=\"onMouseUp()\" class=\"number-plus\" *ngIf=\"type === 'number' && focus\">\n  <cca-common-icon>expand_less</cca-common-icon>\n</div>\n\n<input\n  [type]=\"type\"\n  [value]=\"value\"\n  [ngClass]=\"{center: textCenter, slim: slim}\"\n  [disabled]=\"disabled\"\n  (focus)=\"isFocused(true)\"\n  (blur)=\"isFocused(false)\"\n/>\n<div [@fadeInOut] (mousedown)=\"sub($event)\" (mouseup)=\"onMouseUp()\" class=\"number-minus\" [ngClass]=\"{slim: slim}\" *ngIf=\"type === 'number' && focus\">\n  <cca-common-icon>expand_more</cca-common-icon>\n</div>\n"
    },
    {
      "name": "TableComponent",
      "id": "component-TableComponent-2029f1f02a0dd2ab24dafd35bab7e1b2",
      "file": "projects/common/src/lib/table/table.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "cca-common-table",
      "styleUrls": ["./table.component.scss"],
      "styles": [],
      "templateUrl": ["./table.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 11
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cca-common-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n})\nexport class TableComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@import '~flexboxgrid/dist/flexboxgrid.min.css';\n@import '../../assets/scss/colors.scss';\n\n.table {\n  position: relative;\n\n  background: $white;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.25);\n  border: 1px solid $border-grey;\n  border-radius: 0.5rem;\n\n  /* For testing only */\n  width: 80vw;\n  margin: auto;\n  /*------------------*/\n\n  font-family: Cabin;\n  font-size: 1.4rem;\n\n  .header,\n  .footer {\n    padding: 2rem;\n  }\n\n  .header {\n    color: $grey;\n    font-weight: bold;\n\n    border-bottom: 2px solid $light-grey;\n  }\n\n  .body {\n    color: $black;\n\n    padding: 0 2rem;\n    margin: 0 -0.5rem;\n\n    > .row {\n      margin: 0 -2rem;\n      padding: 0 2rem;\n\n      &:nth-child(2n) {\n        background: $lighter-grey;\n      }\n\n      > .col-xs {\n        padding: 2rem 0.5rem;\n      }\n    }\n  }\n\n  .footer {\n    border-top: 2px solid $light-grey;\n\n    .button {\n      cursor: pointer;\n      transition: color 0.1s ease-in-out;\n    }\n\n    .button:hover {\n      color: rgba(0, 0, 0, 0.75);\n    }\n\n    > .left {\n      color: $grey;\n\n      .input {\n        margin-left: .2rem;\n        display: inline-block;\n        width: 7rem;\n      }\n\n      & > div:last-child {\n        margin-left: 1.2rem;\n      }\n    }\n\n    > .right {\n      color: $grey;\n\n      .label {\n        margin: 0 1rem;\n      }\n\n      .input {\n        margin-left: .2rem;\n        display: inline-block;\n        width: 7rem;\n      }\n    }\n  }\n}\n",
          "styleUrl": "./table.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 8
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"table col-xs\">\n  <div class=\"header row\">\n    <div class=\"col-xs\">\n      Cabeçalho 1\n    </div>\n    <div class=\"col-xs\">\n      Cabeçalho 2\n    </div>\n    <div class=\"col-xs\">\n      Cabeçalho 3\n    </div>\n    <div class=\"col-xs\">\n      Cabeçalho 4\n    </div>\n  </div>\n  <div class=\"body\">\n    <div class=\"row\">\n      <div class=\"col-xs\">\n        Coluna 1\n      </div>\n      <div class=\"col-xs\">\n        Coluna 2\n      </div>\n      <div class=\"col-xs\">\n        Coluna 3\n      </div>\n      <div class=\"col-xs\">\n        Coluna 4\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-xs\">\n        Coluna 1\n      </div>\n      <div class=\"col-xs\">\n        Coluna 2\n      </div>\n      <div class=\"col-xs\">\n        Coluna 3\n      </div>\n      <div class=\"col-xs\">\n        Coluna 4\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-xs\">\n        Coluna 1\n      </div>\n      <div class=\"col-xs\">\n        Coluna 2\n      </div>\n      <div class=\"col-xs\">\n        Coluna 3\n      </div>\n      <div class=\"col-xs\">\n        Coluna 4\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-xs\">\n        Coluna 1\n      </div>\n      <div class=\"col-xs\">\n        Coluna 2\n      </div>\n      <div class=\"col-xs\">\n        Coluna 3\n      </div>\n      <div class=\"col-xs\">\n        Coluna 4\n      </div>\n    </div>\n  </div>\n  <div class=\"footer row between-xs\">\n    <div class=\"row left middle-xs\">\n      <div class=\"button\">\n        <cca-common-icon>refresh</cca-common-icon>\n      </div>\n      <div>\n        Itens por página:\n        <span class=\"input\">\n          <cca-common-input type=\"number\" value=\"10\" textCenter></cca-common-input>\n        </span>\n      </div>\n    </div>\n    <div class=\"row right middle-xs\">\n      <div class=\"button\">\n        <cca-common-icon>first_page</cca-common-icon>\n      </div>\n      <div class=\"button\">\n        <cca-common-icon>chevron_left</cca-common-icon>\n      </div>\n\n      <div class=\"label\">\n        Página:\n        <span class=\"input\">\n          <cca-common-input type=\"number\" value=\"1\" slim textCenter></cca-common-input>\n        </span>\n        / 10\n      </div>\n\n      <div class=\"button\">\n        <cca-common-icon>last_page</cca-common-icon>\n      </div>\n      <div class=\"button\">\n        <cca-common-icon>chevron_right</cca-common-icon>\n      </div>\n    </div>\n  </div>\n</div>\n"
    }
  ],
  "modules": [
    {
      "name": "ButtonModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ButtonComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ButtonComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "CardModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "CardComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "CardComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "IconModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "IconComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "IconComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "InputModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "InputComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "IconModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "InputComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "TableModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "TableComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "IconModule"
            },
            {
              "name": "InputModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "TableComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    }
  ],
  "miscellaneous": {
    "variables": [
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/common/Input.stories.ts",
        "type": "",
        "defaultValue": "() => ({\n  component: InputComponent,\n})"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/common/Table.stories.ts",
        "type": "",
        "defaultValue": "() => ({\n  component: TableComponent,\n})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/common/Button.stories.ts",
        "type": "",
        "defaultValue": "() => ({\n  props: {\n    click: action('This was clicked OMG'),\n  },\n  template: `\n    <cca-common-button (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n      <ng-container slot=\"text\">nova</ng-container>\n    </cca-common-button>\n  `,\n})"
      }
    ],
    "functions": [],
    "typealiases": [],
    "enumerations": [],
    "groupedVariables": {
      "src/stories/common/Input.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/common/Input.stories.ts",
          "type": "",
          "defaultValue": "() => ({\n  component: InputComponent,\n})"
        }
      ],
      "src/stories/common/Table.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/common/Table.stories.ts",
          "type": "",
          "defaultValue": "() => ({\n  component: TableComponent,\n})"
        }
      ],
      "src/stories/common/Button.stories.ts": [
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/common/Button.stories.ts",
          "type": "",
          "defaultValue": "() => ({\n  props: {\n    click: action('This was clicked OMG'),\n  },\n  template: `\n    <cca-common-button (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n      <ng-container slot=\"text\">nova</ng-container>\n    </cca-common-button>\n  `,\n})"
        }
      ]
    },
    "groupedFunctions": {},
    "groupedEnumerations": {},
    "groupedTypeAliases": {}
  },
  "routes": [],
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": "projects/common/src/lib/button/button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/common/src/lib/card/card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/common/src/lib/icon/icon.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/common/src/lib/input/input.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "InputComponent",
        "coveragePercent": 0,
        "coverageCount": "0/14",
        "status": "low"
      },
      {
        "filePath": "projects/common/src/lib/table/table.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TableComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/stories/common/Button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/common/Input.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/common/Table.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
