{
  "pipes": [],
  "interfaces": [],
  "injectables": [],
  "classes": [],
  "directives": [],
  "components": [
    {
      "name": "ButtonComponent",
      "id": "component-ButtonComponent-310522681f0228b854dc5ed5a7697ecc",
      "file": "projects/common/src/lib/button/button.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "cca-common-button",
      "styleUrls": ["./button.component.scss"],
      "styles": [],
      "templateUrl": ["./button.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "disabled",
          "line": 24,
          "type": "boolean"
        },
        {
          "name": "type",
          "line": 23,
          "type": "\"outline\" | \"fill\""
        }
      ],
      "outputsClass": [
        {
          "name": "buttonClick",
          "defaultValue": "new EventEmitter()",
          "line": 25,
          "type": "EventEmitter<void>"
        }
      ],
      "propertiesClass": [
        {
          "name": "animate",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 27,
          "modifierKind": [113]
        },
        {
          "name": "flat",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Attribute",
              "stringifiedArguments": "'flat'"
            }
          ],
          "modifierKind": [114]
        },
        {
          "name": "hasIcon",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 29,
          "modifierKind": [113]
        },
        {
          "name": "hasText",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 30,
          "modifierKind": [113]
        },
        {
          "name": "icon",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 20,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'iconRef'"
            }
          ]
        },
        {
          "name": "negative",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Attribute",
              "stringifiedArguments": "'negative'"
            }
          ],
          "modifierKind": [114]
        },
        {
          "name": "secondary",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Attribute",
              "stringifiedArguments": "'secondary'"
            }
          ],
          "modifierKind": [114]
        },
        {
          "name": "text",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 21,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'textRef'"
            }
          ]
        },
        {
          "name": "warning",
          "type": "",
          "optional": false,
          "description": "",
          "line": 35,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Attribute",
              "stringifiedArguments": "'warning'"
            }
          ],
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 41
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39
        },
        {
          "name": "onClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 46
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  AfterViewInit,\n  ElementRef,\n  Optional,\n  Attribute,\n} from '@angular/core';\n\n@Component({\n  selector: 'cca-common-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent implements OnInit, AfterViewInit {\n  @ViewChild('iconRef') icon!: ElementRef;\n  @ViewChild('textRef') text!: ElementRef;\n\n  @Input() type?: 'outline' | 'fill';\n  @Input() disabled?: boolean;\n  @Output() buttonClick?: EventEmitter<void> = new EventEmitter();\n\n  protected animate = false;\n\n  protected hasIcon = false;\n  protected hasText = false;\n\n  constructor(\n    @Optional() @Attribute('secondary') public secondary,\n    @Optional() @Attribute('flat') public flat,\n    @Optional() @Attribute('warning') public warning,\n    @Optional() @Attribute('negative') public negative\n  ) {}\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    this.hasIcon = this.icon.nativeElement.children.length > 0;\n    this.hasText = this.text.nativeElement.textContent !== '';\n  }\n\n  onClick() {\n    this.buttonClick.emit();\n\n    if (!this.animate) {\n      this.animate = true;\n\n      setTimeout(() => {\n        this.animate = false;\n      }, 850);\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@import '../../assets/scss/colors.scss';\n@import '../../assets/scss/variables.scss';\n\n@keyframes wave {\n  from {\n    box-shadow: 0 0 0 5px #{$tertiary}AA;\n  }\n\n  to {\n    transform: scaleX(1.4) scaleY(1.6);\n    opacity: 0;\n  }\n}\n\n@keyframes wave-icon {\n  from {\n    box-shadow: 0 0 0 5px #{$tertiary}AA;\n  }\n\n  to {\n    transform: scaleX(1.8) scaleY(1.8);\n    opacity: 0;\n  }\n}\n\nbutton {\n  // Default styles\n  position: relative;\n\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  height: 3.6rem;\n\n  color: $primary;\n\n  appearance: none;\n  border-radius: 2rem;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  transition: box-shadow 100ms ease-in-out, color 150ms ease-in-out,\n    background 150ms ease-in-out, border 150ms ease-in-out;\n\n  // Behavior\n  &.icon-btn.text-btn {\n    padding: 0 1.3rem;\n\n    .button-icon {\n      margin-right: 2rem;\n    }\n  }\n\n  &.icon-btn:not(.text-btn) {\n    padding: 0 0.4rem;\n  }\n\n  &.text-btn:not(.icon-btn) {\n    padding: 0 2rem;\n  }\n\n  .button-text:not(:empty) {\n    font-size: 1.6rem;\n    line-height: 1.9rem;\n    text-transform: uppercase;\n  }\n\n  &:hover:not(.transparent),\n  &:focus {\n    box-shadow: $focus-shadow;\n  }\n\n  &.clicked::after {\n    animation: wave 850ms;\n  }\n\n  &.icon-btn:not(.text-btn).clicked::after {\n    animation: wave-icon 850ms;\n  }\n\n  &::after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    display: inline-flex;\n    height: 100%;\n    width: 100%;\n\n    border-radius: 2rem;\n    background: transparent;\n    content: '';\n  }\n\n  // Themes\n  &.secondary {\n    color: $black;\n  }\n\n  &.secondary:not(.transparent) {\n    border-color: $black;\n  }\n\n  &.secondary.fill {\n    color: $white;\n    background: $black;\n  }\n\n  &.flat {\n    color: $grey;\n  }\n\n  &.flat:not(.transparent) {\n    border-color: $grey;\n  }\n\n  &.flat.fill {\n    background: $grey;\n  }\n\n  &.warning {\n    color: $warning;\n  }\n\n  &.warning:not(.transparent) {\n    border-color: $warning;\n  }\n\n  &.warning.fill {\n    background: $warning;\n  }\n\n  &.negative {\n    color: $white;\n  }\n\n  &.negative:not(.transparent) {\n    border-color: $white;\n  }\n\n  &.negative.fill {\n    background: $white;\n    color: $primary;\n  }\n\n  &.negative.transparent {\n    &:hover {\n      background: #{$light-grey}33;\n      border: 0.2rem solid transparent;\n    }\n  }\n\n  &.outline {\n    background: transparent;\n    border: 0.2rem solid $primary;\n  }\n\n  &.fill {\n    background: $primary;\n    border: 0.2rem solid $primary;\n    color: $white;\n  }\n\n  &.transparent {\n    background: transparent;\n    border: 0.2rem solid transparent;\n\n    &:hover {\n      background: $light-grey;\n    }\n  }\n}\n",
          "styleUrl": "./button.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "secondary",
            "type": ""
          },
          {
            "name": "flat",
            "type": ""
          },
          {
            "name": "warning",
            "type": ""
          },
          {
            "name": "negative",
            "type": ""
          }
        ],
        "line": 30,
        "jsdoctags": [
          {
            "name": "secondary",
            "type": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "flat",
            "type": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "warning",
            "type": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "negative",
            "type": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "AfterViewInit"],
      "templateData": "<button\n  (click)=\"onClick()\"\n  [ngClass]=\"{\n    'icon-btn': hasIcon,\n    'text-btn': hasText,\n    outline: !type || type === 'outline',\n    fill: type === 'fill',\n    transparent: type === 'transparent',\n    clicked: animate,\n    secondary: secondary === '',\n    flat: flat === '',\n    warning: warning === '',\n    negative: negative === ''\n  }\"\n>\n  <div #iconRef class=\"button-icon\">\n    <ng-content select=\"[slot='icon']\"></ng-content>\n  </div>\n  <span #textRef class=\"button-text\"\n    ><ng-content #text select=\"[slot='text']\"></ng-content\n  ></span>\n</button>\n"
    },
    {
      "name": "CardComponent",
      "id": "component-CardComponent-90dbd1daaca91b69a40428f3ec41d9c4",
      "file": "projects/common/src/lib/card/card.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "cca-common-card",
      "styleUrls": ["./card.component.scss"],
      "styles": [],
      "templateUrl": ["./card.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 11
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cca-common-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./card.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 8
      },
      "implements": ["OnInit"],
      "templateData": "<p>card works!</p>\n"
    },
    {
      "name": "IconComponent",
      "id": "component-IconComponent-5db80df6850b5faa47466094622cab74",
      "file": "projects/common/src/lib/icon/icon.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "cca-common-icon",
      "styleUrls": ["./icon.component.scss"],
      "styles": [],
      "templateUrl": ["./icon.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 11
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cca-common-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n})\nexport class IconComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "$material-icons-font-path: '../../assets/fonts/';\n@import '~material-icons/iconfont/material-icons.scss';\n\n.material-icons {\n  display: flex;\n}\n",
          "styleUrl": "./icon.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 8
      },
      "implements": ["OnInit"],
      "templateData": "<span class=\"material-icons\"><ng-content></ng-content></span>\n"
    }
  ],
  "modules": [
    {
      "name": "ButtonModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ButtonComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ButtonComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "CardModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "CardComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "CardComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "IconModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "IconComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "IconComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    }
  ],
  "miscellaneous": {
    "variables": [
      {
        "name": "Fill",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/common/Button.stories.ts",
        "type": "",
        "defaultValue": "() => ({\n  props: {\n    click: action('This was clicked OMG'),\n  },\n  template: `\n    <cca-common-button type=\"fill\" (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n      <ng-container slot=\"text\">nova</ng-container>\n    </cca-common-button>\n    <br>\n    <cca-common-button type=\"fill\" (buttonClick)=\"click($event)\">\n      <ng-container slot=\"text\">nova</ng-container>\n    </cca-common-button>\n    <br>\n    <cca-common-button type =\"fill\" (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n    </cca-common-button>\n  `,\n})"
      },
      {
        "name": "Negative",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/common/Button.stories.ts",
        "type": "",
        "defaultValue": "() => ({\n  parameters: {\n    backgrounds: [{ name: 'dark background', value: '#000', default: true }],\n  },\n  props: {\n    click: action('This was clicked OMG'),\n  },\n  template: `\n    <section style=\"background-color: #234B90;\">\n      <cca-common-button negative (buttonClick)=\"click($event)\">\n        <cca-common-icon slot=\"icon\">add</cca-common-icon>\n        <ng-container slot=\"text\">negative</ng-container>\n      </cca-common-button>\n      <br>\n      <cca-common-button negative type=\"fill\" (buttonClick)=\"click($event)\">\n        <ng-container slot=\"text\">negative</ng-container>\n      </cca-common-button>\n      <br>\n      <cca-common-button negative type=\"transparent\" (buttonClick)=\"click($event)\">\n        <cca-common-icon slot=\"icon\">add</cca-common-icon>\n      </cca-common-button>\n    </section>\n  `,\n})"
      },
      {
        "name": "Outline",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/common/Button.stories.ts",
        "type": "",
        "defaultValue": "() => ({\n  props: {\n    click: action('This was clicked OMG'),\n  },\n  template: `\n    <cca-common-button (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n      <ng-container slot=\"text\">nova</ng-container>\n    </cca-common-button>\n    <br>\n    <cca-common-button (buttonClick)=\"click($event)\">\n      <ng-container slot=\"text\">nova</ng-container>\n    </cca-common-button>\n    <br>\n    <cca-common-button (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n    </cca-common-button>\n  `,\n})"
      },
      {
        "name": "Styles",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/common/Button.stories.ts",
        "type": "",
        "defaultValue": "() => ({\n  props: {\n    click: action('This was clicked OMG'),\n  },\n  template: `\n    <div style=\"display: flex; flex-flow: row wrap\">\n\n      <!--Primary-->\n      <section style=\"padding: 1rem;\">\n        <cca-common-button (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n          <ng-container slot=\"text\">primary</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button type=\"fill\" (buttonClick)=\"click($event)\">\n          <ng-container slot=\"text\">primary</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button type=\"transparent\" (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n        </cca-common-button>\n      </section>\n\n      <!--Secondary-->\n      <section style=\"padding: 1rem;\">\n        <cca-common-button secondary (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n          <ng-container slot=\"text\">secondary</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button secondary type=\"fill\" (buttonClick)=\"click($event)\">\n          <ng-container slot=\"text\">secondary</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button secondary type=\"transparent\" (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n        </cca-common-button>\n      </section>\n\n      <!--Flat-->\n      <section style=\"padding: 1rem;\">\n        <cca-common-button flat (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n          <ng-container slot=\"text\">flat</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button flat type=\"fill\" (buttonClick)=\"click($event)\">\n          <ng-container slot=\"text\">flat</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button flat type=\"transparent\" (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n        </cca-common-button>\n      </section>\n\n      <!--Warning-->\n      <section style=\"padding: 1rem;\">\n        <cca-common-button warning (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n          <ng-container slot=\"text\">warning</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button warning type=\"fill\" (buttonClick)=\"click($event)\">\n          <ng-container slot=\"text\">warning</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button warning type=\"transparent\" (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n        </cca-common-button>\n      </section>\n\n      <!--Negative-->\n      <section style=\"padding: 1rem; background-color: #234B90; border-radius: .5rem\">\n        <cca-common-button negative (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n          <ng-container slot=\"text\">negative</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button negative type=\"fill\" (buttonClick)=\"click($event)\">\n          <ng-container slot=\"text\">negative</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button negative type=\"transparent\" (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n        </cca-common-button>\n      </section>\n    </div>\n`,\n})",
        "description": "<p>dsfadsfadfasdfasdf</p>\n"
      },
      {
        "name": "Transparent",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/common/Button.stories.ts",
        "type": "",
        "defaultValue": "() => ({\n  props: {\n    click: action('This was clicked OMG'),\n  },\n  template: `\n    <cca-common-button type=\"transparent\" (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n      <ng-container slot=\"text\">nova</ng-container>\n    </cca-common-button>\n    <br>\n    <cca-common-button type=\"transparent\" (buttonClick)=\"click($event)\">\n      <ng-container slot=\"text\">nova</ng-container>\n    </cca-common-button>\n    <br>\n    <cca-common-button type=\"transparent\" (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n    </cca-common-button>\n  `,\n})"
      },
      {
        "name": "Warning",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/common/Button.stories.ts",
        "type": "",
        "defaultValue": "() => ({\n  props: {\n    click: action('This was clicked OMG'),\n  },\n  template: `\n    <cca-common-button warning (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n      <ng-container slot=\"text\">warning</ng-container>\n    </cca-common-button>\n    <br>\n    <cca-common-button warning type=\"fill\" (buttonClick)=\"click($event)\">\n      <ng-container slot=\"text\">warning</ng-container>\n    </cca-common-button>\n    <br>\n    <cca-common-button warning type=\"transparent\" (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n    </cca-common-button>\n  `,\n})"
      }
    ],
    "functions": [],
    "typealiases": [],
    "enumerations": [],
    "groupedVariables": {
      "src/stories/common/Button.stories.ts": [
        {
          "name": "Fill",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/common/Button.stories.ts",
          "type": "",
          "defaultValue": "() => ({\n  props: {\n    click: action('This was clicked OMG'),\n  },\n  template: `\n    <cca-common-button type=\"fill\" (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n      <ng-container slot=\"text\">nova</ng-container>\n    </cca-common-button>\n    <br>\n    <cca-common-button type=\"fill\" (buttonClick)=\"click($event)\">\n      <ng-container slot=\"text\">nova</ng-container>\n    </cca-common-button>\n    <br>\n    <cca-common-button type =\"fill\" (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n    </cca-common-button>\n  `,\n})"
        },
        {
          "name": "Negative",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/common/Button.stories.ts",
          "type": "",
          "defaultValue": "() => ({\n  parameters: {\n    backgrounds: [{ name: 'dark background', value: '#000', default: true }],\n  },\n  props: {\n    click: action('This was clicked OMG'),\n  },\n  template: `\n    <section style=\"background-color: #234B90;\">\n      <cca-common-button negative (buttonClick)=\"click($event)\">\n        <cca-common-icon slot=\"icon\">add</cca-common-icon>\n        <ng-container slot=\"text\">negative</ng-container>\n      </cca-common-button>\n      <br>\n      <cca-common-button negative type=\"fill\" (buttonClick)=\"click($event)\">\n        <ng-container slot=\"text\">negative</ng-container>\n      </cca-common-button>\n      <br>\n      <cca-common-button negative type=\"transparent\" (buttonClick)=\"click($event)\">\n        <cca-common-icon slot=\"icon\">add</cca-common-icon>\n      </cca-common-button>\n    </section>\n  `,\n})"
        },
        {
          "name": "Outline",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/common/Button.stories.ts",
          "type": "",
          "defaultValue": "() => ({\n  props: {\n    click: action('This was clicked OMG'),\n  },\n  template: `\n    <cca-common-button (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n      <ng-container slot=\"text\">nova</ng-container>\n    </cca-common-button>\n    <br>\n    <cca-common-button (buttonClick)=\"click($event)\">\n      <ng-container slot=\"text\">nova</ng-container>\n    </cca-common-button>\n    <br>\n    <cca-common-button (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n    </cca-common-button>\n  `,\n})"
        },
        {
          "name": "Styles",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/common/Button.stories.ts",
          "type": "",
          "defaultValue": "() => ({\n  props: {\n    click: action('This was clicked OMG'),\n  },\n  template: `\n    <div style=\"display: flex; flex-flow: row wrap\">\n\n      <!--Primary-->\n      <section style=\"padding: 1rem;\">\n        <cca-common-button (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n          <ng-container slot=\"text\">primary</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button type=\"fill\" (buttonClick)=\"click($event)\">\n          <ng-container slot=\"text\">primary</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button type=\"transparent\" (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n        </cca-common-button>\n      </section>\n\n      <!--Secondary-->\n      <section style=\"padding: 1rem;\">\n        <cca-common-button secondary (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n          <ng-container slot=\"text\">secondary</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button secondary type=\"fill\" (buttonClick)=\"click($event)\">\n          <ng-container slot=\"text\">secondary</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button secondary type=\"transparent\" (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n        </cca-common-button>\n      </section>\n\n      <!--Flat-->\n      <section style=\"padding: 1rem;\">\n        <cca-common-button flat (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n          <ng-container slot=\"text\">flat</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button flat type=\"fill\" (buttonClick)=\"click($event)\">\n          <ng-container slot=\"text\">flat</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button flat type=\"transparent\" (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n        </cca-common-button>\n      </section>\n\n      <!--Warning-->\n      <section style=\"padding: 1rem;\">\n        <cca-common-button warning (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n          <ng-container slot=\"text\">warning</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button warning type=\"fill\" (buttonClick)=\"click($event)\">\n          <ng-container slot=\"text\">warning</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button warning type=\"transparent\" (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n        </cca-common-button>\n      </section>\n\n      <!--Negative-->\n      <section style=\"padding: 1rem; background-color: #234B90; border-radius: .5rem\">\n        <cca-common-button negative (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n          <ng-container slot=\"text\">negative</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button negative type=\"fill\" (buttonClick)=\"click($event)\">\n          <ng-container slot=\"text\">negative</ng-container>\n        </cca-common-button>\n        <br>\n        <cca-common-button negative type=\"transparent\" (buttonClick)=\"click($event)\">\n          <cca-common-icon slot=\"icon\">add</cca-common-icon>\n        </cca-common-button>\n      </section>\n    </div>\n`,\n})",
          "description": "<p>dsfadsfadfasdfasdf</p>\n"
        },
        {
          "name": "Transparent",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/common/Button.stories.ts",
          "type": "",
          "defaultValue": "() => ({\n  props: {\n    click: action('This was clicked OMG'),\n  },\n  template: `\n    <cca-common-button type=\"transparent\" (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n      <ng-container slot=\"text\">nova</ng-container>\n    </cca-common-button>\n    <br>\n    <cca-common-button type=\"transparent\" (buttonClick)=\"click($event)\">\n      <ng-container slot=\"text\">nova</ng-container>\n    </cca-common-button>\n    <br>\n    <cca-common-button type=\"transparent\" (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n    </cca-common-button>\n  `,\n})"
        },
        {
          "name": "Warning",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/common/Button.stories.ts",
          "type": "",
          "defaultValue": "() => ({\n  props: {\n    click: action('This was clicked OMG'),\n  },\n  template: `\n    <cca-common-button warning (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n      <ng-container slot=\"text\">warning</ng-container>\n    </cca-common-button>\n    <br>\n    <cca-common-button warning type=\"fill\" (buttonClick)=\"click($event)\">\n      <ng-container slot=\"text\">warning</ng-container>\n    </cca-common-button>\n    <br>\n    <cca-common-button warning type=\"transparent\" (buttonClick)=\"click($event)\">\n      <cca-common-icon slot=\"icon\">add</cca-common-icon>\n    </cca-common-button>\n  `,\n})"
        }
      ]
    },
    "groupedFunctions": {},
    "groupedEnumerations": {},
    "groupedTypeAliases": {}
  },
  "routes": [],
  "coverage": {
    "count": 11,
    "status": "low",
    "files": [
      {
        "filePath": "projects/common/src/lib/button/button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/17",
        "status": "low"
      },
      {
        "filePath": "projects/common/src/lib/card/card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/common/src/lib/icon/icon.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/stories/common/Button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Fill",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/common/Button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Negative",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/common/Button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Outline",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/common/Button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Styles",
        "coveragePercent": 100,
        "coverageCount": "1/1",
        "status": "very-good"
      },
      {
        "filePath": "src/stories/common/Button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Transparent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/common/Button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Warning",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
