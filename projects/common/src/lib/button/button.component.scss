@import '../../assets/scss/colors.scss';
@import '../../assets/scss/variables.scss';

@keyframes wave {
  from {
    box-shadow: 0 0 0 5px #{$tertiary}AA;
  }

  to {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
  }
}

@keyframes wave-icon {
  from {
    box-shadow: 0 0 0 5px #{$tertiary}AA;
  }

  to {
    transform: scaleX(1.8) scaleY(1.8);
    opacity: 0;
  }
}

button {
  // Default styles
  position: relative;

  display: flex;
  flex-flow: row wrap;
  align-items: center;
  height: 3.6rem;

  color: $primary;

  appearance: none;
  border-radius: 2rem;
  outline: none;
  cursor: pointer;
  user-select: none;
  transition: box-shadow 100ms ease-in-out, color 150ms ease-in-out,
    background 150ms ease-in-out, border 150ms ease-in-out;

  // Behavior
  &.icon-btn.text-btn {
    padding: 0 1.3rem;

    .button-icon {
      margin-right: 2rem;
    }
  }

  &.icon-btn:not(.text-btn) {
    padding: 0 0.4rem;
  }

  &.text-btn:not(.icon-btn) {
    padding: 0 2rem;
  }

  .button-text:not(:empty) {
    font-size: 1.6rem;
    line-height: 1.9rem;
    text-transform: uppercase;
  }

  &:hover:not(.transparent),
  &:focus {
    box-shadow: $focus-shadow;
  }

  &.clicked::after {
    animation: wave 850ms;
  }

  &.icon-btn:not(.text-btn).clicked::after {
    animation: wave-icon 850ms;
  }

  &::after {
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;

    display: inline-flex;
    height: 100%;
    width: 100%;

    border-radius: 2rem;
    background: transparent;
    content: '';
  }

  // Themes
  &.secondary {
    color: $black;
  }

  &.secondary:not(.transparent) {
    border-color: $black;
  }

  &.secondary.fill {
    color: $white;
    background: $black;
  }

  &.flat {
    color: $grey;
  }

  &.flat:not(.transparent) {
    border-color: $grey;
  }

  &.flat.fill {
    background: $grey;
  }

  &.warning {
    color: $warning;
  }

  &.warning:not(.transparent) {
    border-color: $warning;
  }

  &.warning.fill {
    background: $warning;
  }

  &.negative {
    color: $white;
  }

  &.negative:not(.transparent) {
    border-color: $white;
  }

  &.negative.fill {
    background: $white;
    color: $primary;
  }

  &.negative.transparent {
    &:hover {
      background: #{$light-grey}33;
      border: 0.2rem solid transparent;
    }
  }

  &.outline {
    background: transparent;
    border: 0.2rem solid $primary;
  }

  &.fill {
    background: $primary;
    border: 0.2rem solid $primary;
    color: $white;
  }

  &.transparent {
    background: transparent;
    border: 0.2rem solid transparent;

    &:hover {
      background: $light-grey;
    }
  }
}
